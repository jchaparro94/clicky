{"version":3,"sources":["App.js","index.js"],"names":["App","state","character","score","highScore","clickedArr","handleImageClick","id","console","log","shuffledArr","_this","shuffledCharacters","setState","includes","concat","characterArr","i","length","j","Math","floor","random","_ref","_this2","this","displayImages","map","each","react_default","a","createElement","key","alt","name","onClick","src","image","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"gvDAmEeA,6MA9DbC,MAAQ,CACNC,YACAC,MAAO,EACPC,UAAW,EACXC,WAAY,MASdC,iBAAmB,SAACC,GAClBC,QAAQC,IAAIF,GACZ,IAAMG,EAAcC,EAAKC,mBAAmBV,GAC5CS,EAAKE,SAAS,CAAEX,UAAUQ,IACvBC,EAAKV,MAAMI,WAAWS,SAASP,GAChCI,EAAKE,SAAS,CAAEV,MAAO,EAAGE,WAAY,KAEtCM,EAAKE,SAAS,CACZR,WAAYM,EAAKV,MAAMI,WAAWU,OAAO,CAACR,IAC1CJ,MAAOQ,EAAKV,MAAME,MAAQ,IAG3BQ,EAAKV,MAAME,OAASQ,EAAKV,MAAMG,WAChCO,EAAKE,SAAS,CAACT,UAAWO,EAAKV,MAAME,MAAQ,OAIjDS,mBAAqB,SAACI,GAClB,IAAI,IAAIC,EAAID,EAAaE,OAAQ,EAAGD,EAAI,EAAGA,IAAK,CAC9C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADMM,EAET,CAACP,EAAaG,GAAIH,EAAaC,IAAnED,EAAaC,GAFgCM,EAAA,GAE5BP,EAAaG,GAFeI,EAAA,GAIlD,OAAOP,2EAGA,IAAAQ,EAAAC,KACHC,EAAgBD,KAAKxB,MAAMC,UAAUyB,IAAI,SAAAC,GAAI,OAC/CC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAKrB,GAAI0B,IAAKL,EAAKM,KAAMC,QAAS,kBAAMX,EAAKlB,iBAAiBsB,EAAKrB,KAAK6B,IAAKR,EAAKS,UAE9F,OACER,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKxB,GAAG,UACNsB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,kBAAUN,KAAKxB,MAAME,MAArB,eAAwCsB,KAAKxB,MAAMG,YAErDyB,EAAAC,EAAAC,cAAA,OAAKxB,GAAG,aACNsB,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,0DAEFF,EAAAC,EAAAC,cAAA,OAAKxB,GAAG,UAAUmB,GAClBG,EAAAC,EAAAC,cAAA,OAAKxB,GAAG,QACNsB,EAAAC,EAAAC,cAAA,iCAzDUO,yBCGlBC,IAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2b4ada9a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport character from \"./character.json\";\n\nclass App extends Component {\n  \n  state = {\n    character,\n    score: 0,\n    highScore: 0,\n    clickedArr: []\n  };\n  // handleImageClick = (id) => {\n  //   console.log(id);\n  //   this.setState({\n  //     score: this.state.score +1\n  //   })\n\n  // }\n  handleImageClick = (id) => {\n    console.log(id);\n    const shuffledArr = this.shuffledCharacters(character);\n    this.setState({ character:shuffledArr});\n    if(this.state.clickedArr.includes(id)) {\n      this.setState({ score: 0, clickedArr: [] });\n    } else {\n      this.setState({\n        clickedArr: this.state.clickedArr.concat([id]),\n        score: this.state.score + 1\n      });\n    }\n    if(this.state.score >= this.state.highScore) {\n      this.setState({highScore: this.state.score + 1});\n    }\n  }\n\n  shuffledCharacters = (characterArr) => {\n      for(let i = characterArr.length -1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [characterArr[i], characterArr[j]] = [characterArr[j], characterArr[i]];\n    }\n    return characterArr;\n  }\n\n  render() {\n    let displayImages = this.state.character.map(each => \n      <img key={each.id} alt={each.name} onClick={() => this.handleImageClick(each.id)} src={each.image}></img>\n    )\n    return(\n      <div>\n      <div id=\"header\">\n        <p>Clicky Game</p>\n        <p>Click any image to begin!</p>\n        <p>Score:{this.state.score} High Score:{this.state.highScore}</p>\n      </div>\n      <div id=\"container\">\n        <p>Click on any image to earn a point!</p>\n        <p>Click on the same image twice and GAME OVER!</p>\n      </div>\n      <div id=\"images\">{displayImages}</div>\n      <div id=\"foot\">\n        <p>clicky game</p>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}